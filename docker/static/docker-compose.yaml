version: '3.3'
services:
  mysql:
    build: ./mysql
    image: mysql-image:latest
    container_name: mysql-container
    ports:
      - "3306:3306"
    volumes:
      - "./mysql/data:/var/lib/mysql"
      - "./mysql/.my.cnf:/etc/my.cnf"
    environment:
      - MYSQL_ROOT_PASSWORD=s11p31b202!
      - TZ=Asia/Seoul
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    restart: always
    networks:
      - app-network

  redis:
    build: ./redis
    image: redis-image:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - "./redis/data:/data"
    environment:
      - TZ=Asia/Seoul
    restart: always
    networks:
      - app-network

  jenkins:
    build: ./jenkins
    image: jenkins-image:latest
    container_name: jenkins-container
    privileged: true
    user: root
    ports:
      - "7070:7070"
      - "50000:50000"
    volumes:
      - "./jenkins/data:/var/jenkins_home"
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
    environment:
      - TZ=Asia/Seoul
    restart: always
    networks:
      - app-network

  nginx:
    build: ./nginx
    image: nginx-image:latest
    container_name: nginx-container
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./certbot/www:/var/www/certbot"  # Certbot 인증 파일을 저장할 디렉토리
      - "./certbot/conf:/etc/letsencrypt"  # Certbot SSL 인증서 디렉토리
    environment:
      - TZ=Asia/Seoul
    restart: always
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot-container
    volumes:
      - "./certbot/conf:/etc/letsencrypt" 
      - "./certbot/www:/var/www/certbot"
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h; done'"
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    external: true
